apiVersion: apps/v1
kind: Deployment
metadata:
  name: studygroup-firstproject
  namespace: studygroup
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/instance: studygroup-firstproject
      app.kubernetes.io/name: studygroup-firstproject
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/instance: studygroup-firstproject
        app.kubernetes.io/name: studygroup-firstproject
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: studygroup-firstproject
        image: ghcr.io/joeyx22lm/studygroup/firstproject:latest
        imagePullPolicy: IfNotPresent
        name: nodeservice
        ports:
        - containerPort: 8080
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: github-registry
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: studygroup-firstproject
  name: studygroup-firstproject
  namespace: studygroup
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app.kubernetes.io/instance: studygroup-firstproject
    app.kubernetes.io/name: studygroup-firstproject
  sessionAffinity: None
  type: ClusterIP

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    acme.cert-manager.io/http01-edit-in-place: "true"
    cert-manager.io/cluster-issuer: acme-letsencrypt
    meta.helm.sh/release-name: studygroup-firstproject
    meta.helm.sh/release-namespace: studygroup
  name: studygroup-firstproject-root
  namespace: studygroup
spec:
  rules:
  - host: studygroup.orlandowest.io
    http:
      paths:
      - backend:
          service:
            name: studygroup-firstproject
            port:
              number: 8080
        path: /
        pathType: ImplementationSpecific
  tls:
  - hosts:
    - studygroup.orlandowest.io
    secretName: studygroup-firstproject-tls

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: studygroup-firstproject-wildcard
  namespace: studygroup
spec:
  rules:
  - host: '*.studygroup.orlandowest.io'
    http:
      paths:
      - backend:
          service:
            name: studygroup-firstproject
            port:
              number: 8080
        path: /
        pathType: ImplementationSpecific
  tls:
  - hosts:
    - '*.studygroup.orlandowest.io'
    secretName: studygroup-firstproject-wildcard-tls
